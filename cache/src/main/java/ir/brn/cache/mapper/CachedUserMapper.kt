package ir.brn.cache.mapper

import ir.brn.cache.model.CachedUser
import ir.brn.data.model.user.UserEntity
import javax.inject.Inject

class CachedUserMapper @Inject constructor() : CacheMapper<CachedUser, UserEntity> {

    override fun mapFromCached(type: CachedUser): UserEntity {
        return UserEntity(type.id,
                type.username,
                type.type,
                type.appCurrentVersion,
                type.gpsStatus,
                type.firstName,
                type.lastName,
                type.nationalCode,
                type.phone,
                type.email,
                type.mobile,
                type.shaba,
                type.address,
                type.birthDate,
                type.gcmToken,
                type.profilePhoto,
                type.profileCover,
                type.truckTypeId,
                type.truckTypeName,
                type.carrierTypeId,
                type.carrierTypeName,
                type.smartCardNumber,
                type.smartCardExpireAt,
                type.navigationCard,
                type.navigationCardExpireAt,
                type.licensePlates,
                type.vehicleModel,
                type.vehicleColor,
                type.vehicleDiagnosticAt,
                type.vehicleOwnerFirstName,
                type.vehicleOwnerLasName,
                type.vehicleOwnerTel,
                type.vehicleOwnerAddress,
                type.cityId,
                type.cityName,
                type.provinceId,
                type.provinceName,
                type.status,
                type.withLoadMeter,
                type.withoutLoadMeter,
                type.gpsIterateSecond,
                type.gpsFastIterateSecond,
                type.gpsSendIterateSecond,
                type.gpsSyncIterateSecond,
                type.currentLoadId,
                type.isDriver,
                type.profileComplete,
                type.isUpdated)
    }

    override fun mapToCached(type: UserEntity): CachedUser {
        return CachedUser(type.id,
                type.username,
                type.type,
                type.appCurrentVersion,
                type.gpsStatus,
                type.firstName,
                type.lastName,
                type.nationalCode,
                type.phone,
                type.email,
                type.mobile,
                type.shaba,
                type.address,
                type.birthDate,
                type.gcmToken,
                type.profilePhoto,
                type.profileCover,
                type.truckTypeId,
                type.truckTypeName,
                type.carrierTypeId,
                type.carrierTypeName,
                type.smartCardNumber,
                type.smartCardExpireAt,
                type.navigationCard,
                type.navigationCardExpireAt,
                type.licensePlates,
                type.vehicleModel,
                type.vehicleColor,
                type.vehicleDiagnosticAt,
                type.vehicleOwnerFirstName,
                type.vehicleOwnerLasName,
                type.vehicleOwnerTel,
                type.vehicleOwnerAddress,
                type.cityId,
                type.cityName,
                type.provinceId,
                type.provinceName,
                type.status,
                type.withLoadMeter,
                type.withoutLoadMeter,
                type.gpsIterateSecond,
                type.gpsFastIterateSecond,
                type.gpsSendIterateSecond,
                type.gpsSyncIterateSecond,
                type.currentLoadId,
                type.isDriver,
                type.profileComplete,
                type.isUpdated)
    }
}